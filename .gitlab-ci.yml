stages:
  - test
  - publish

include:
  - template: Dependency-Scanning.gitlab-ci.yml
  - template: SAST.gitlab-ci.yml
  - template: Code-Quality.gitlab-ci.yml

# Make quality report downloadable
code_quality:
  artifacts:
    paths: [gl-code-quality-report.json]
  rules:
    - if: '$CI_COMMIT_TAG == null'

sast:
  variables:
    SAST_EXCLUDED_PATHS: test/**

# Lint js files.
lint-js:
 image: node
 stage: test
 tags:
   - docker
 script:
   - npm install -g eslint
   - eslint --ignore-pattern "**/*.min.js" $CI_PROJECT_DIR

# Performs unit testing.
unit-test:
  coverage: '/Statements\s*:\s*(\d+(?:\.\d+)?\%)/'
  image: node:14-alpine
  stage: test
  artifacts:
    paths: [coverage]
  tags:
    - docker
  script:
    - npm i -g mocha
    - npm i -g nyc
    - npm i .
    - npm run-script coverage

# Publish package to NPM.
publish:
  stage: publish
  image: node
  tags:
    - docker
  only:
    - tags
    - triggers
  except:
    variables:
      - $CI_COMMIT_TAG =~ /beta/
  script:
    - npm install -g npm-cli-login
    - npm-cli-login
    - npm publish
