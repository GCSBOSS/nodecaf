stages:
  - test
  - publish

include:
  - template: Dependency-Scanning.gitlab-ci.yml
  - template: SAST.gitlab-ci.yml
  - template: Code-Quality.gitlab-ci.yml

# Make quality report downloadable
code_quality:
  artifacts:
    paths: [gl-code-quality-report.json]
  rules:
    - if: '$CI_COMMIT_TAG == null'

sast:
  variables:
    SAST_EXCLUDED_PATHS: test/**

# Lint js files.
lint-js:
  image: node:22
  stage: test
  script:
    - npm i -D
    - npm run lint

# Performs unit testing.
unit-test:
  coverage: '/Statements\s*:\s*(\d+(?:\.\d+)?\%)/'
  image: node:16-alpine
  timeout: one minute
  stage: test
  artifacts:
    paths: [coverage]
  script:
    - npm i -g mocha nyc
    - npm ci .
    - npm run coverage

compat-test-node-18:
  image: node:18-alpine
  timeout: one minute
  stage: test
  script:
    - npm ci .
    - npm t

compat-test-node-20:
  image: node:20-alpine
  timeout: one minute
  stage: test
  script:
    - npm ci .
    - npm t

compat-test-node-22:
  image: node:22-alpine
  timeout: one minute
  stage: test
  script:
    - npm ci .
    - npm t

# Publish package to NPM.
publish:
  stage: publish
  image: node
  only:
    - tags
    - triggers
  script:
    - npm set //registry.npmjs.org/:_authToken $NPM_TOKEN
    - npm publish

build:
  image: docker:latest
  stage: publish
  services:
    - docker:dind
  only:
    - tags
    - triggers
  script:
    - TAG=${CI_COMMIT_TAG:1}
    # - MAJ=$(echo "$TAG" | cut -d. -f1)
    - MIN=$(echo "$TAG" | cut -d. -f1,2)
    - docker build --pull
      -t "gcsboss/$CI_PROJECT_NAME:$MIN"
      -t "gcsboss/$CI_PROJECT_NAME:$TAG"
      -t "gcsboss/$CI_PROJECT_NAME"
      .
    - docker login -u "$DOCKER_HUB_USER" -p "$DOCKER_HUB_PASSWORD"
    - docker push "gcsboss/$CI_PROJECT_NAME:$MIN"
    - docker push "gcsboss/$CI_PROJECT_NAME:$TAG"
    - docker push "gcsboss/$CI_PROJECT_NAME"

build-node22:
  image: docker:latest
  stage: publish
  services:
    - docker:dind
  tags:
    - docker
  only:
    - tags
    - triggers
  script:
    - TAG=${CI_COMMIT_TAG:1}
    - MIN=$(echo "$TAG" | cut -d. -f1,2)
    - docker build --pull -f Dockerfile-node22
      -t "gcsboss/$CI_PROJECT_NAME:$MIN-node22"
      -t "gcsboss/$CI_PROJECT_NAME:$TAG-node22"
      -t "gcsboss/$CI_PROJECT_NAME:node22"
      .
    - docker login -u "$DOCKER_HUB_USER" -p "$DOCKER_HUB_PASSWORD"
    - docker push "gcsboss/$CI_PROJECT_NAME:$MIN-node22"
    - docker push "gcsboss/$CI_PROJECT_NAME:$TAG-node22"
    - docker push "gcsboss/$CI_PROJECT_NAME:node22"

build-slim:
  image: docker:latest
  stage: publish
  services:
    - docker:dind
  tags:
    - docker
  only:
    - tags
    - triggers
  script:
    - TAG=${CI_COMMIT_TAG:1}
    - MIN=$(echo "$TAG" | cut -d. -f1,2)
    - docker build --pull -f Dockerfile-slim
      -t "gcsboss/$CI_PROJECT_NAME:$MIN-slim"
      -t "gcsboss/$CI_PROJECT_NAME:$TAG-slim"
      -t "gcsboss/$CI_PROJECT_NAME:slim"
      .
    - docker login -u "$DOCKER_HUB_USER" -p "$DOCKER_HUB_PASSWORD"
    - docker push "gcsboss/$CI_PROJECT_NAME:$MIN-slim"
    - docker push "gcsboss/$CI_PROJECT_NAME:$TAG-slim"
    - docker push "gcsboss/$CI_PROJECT_NAME:slim"
